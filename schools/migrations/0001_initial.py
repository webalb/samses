# Generated by Django 5.0.6 on 2024-12-14 10:28

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_classrooms', models.PositiveSmallIntegerField(default=0)),
                ('classrooms_availability', models.TextField(blank=True)),
                ('book_count', models.PositiveIntegerField(default=0)),
                ('digital_access', models.BooleanField(blank=True, default=False, null=True)),
                ('study_space', models.SmallIntegerField(blank=True, help_text='Number of students the library can accommodate.', null=True)),
                ('library_availability', models.TextField(blank=True)),
                ('facility_type', models.CharField(blank=True, choices=[('Football field', 'Football Field'), ('Volleyball court', 'Volleyball Court'), ('Basketball court', 'Basketball Court'), ('Tennis court', 'Tennis Court'), ('Swimming pool', 'Swimming Pool'), ('Track and field', 'Track and Field')], max_length=100, null=True)),
                ('field_availability', models.TextField(blank=True)),
                ('lab_type', models.CharField(blank=True, choices=[('Computer', 'Computer Lab'), ('Physics', 'Physics Lab'), ('Chemistry', 'Chemistry Lab'), ('Biology', 'Biology Lab'), ('Robotics', 'Robotics Lab'), ('Language', 'Language Lab')], max_length=100, null=True)),
                ('computer_availability', models.SmallIntegerField(blank=True, help_text='Number of computers available for student use.', null=True)),
                ('internet_access', models.BooleanField(default=False)),
                ('smart_classrooms', models.BooleanField(default=False)),
                ('lab_availability', models.TextField(blank=True, help_text='Detailed information about resources available in the lab and their usage.', null=True)),
            ],
            options={
                'verbose_name': 'Infrastructure',
                'verbose_name_plural': 'Infrastructures',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('abbreviation', models.CharField(blank=True, max_length=20, null=True)),
                ('motto', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('school_type', models.CharField(choices=[('public', 'Public School'), ('private', 'Private School'), ('community', 'Community School')], default='public', max_length=20)),
                ('program', models.CharField(choices=[('primary', 'Primary'), ('jss', 'Junior Secondary School'), ('sss', 'Senior Secondary School'), ('primary+jss', 'Primary + Junior Secondary School'), ('jss+sss', 'Junior Secondary School + Senior Secondary School'), ('all', 'All Programs')], default='all', max_length=12)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='schools_logo/%Y/%m/%d/')),
                ('registration_number', models.CharField(blank=True, default='', max_length=50, null=True, unique=True)),
                ('lga', models.CharField(default='', max_length=50)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('ward', models.CharField(default='', max_length=50)),
                ('street_address', models.TextField(default='')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InfrastructureImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_type', models.CharField(choices=[('classroom', 'Classroom'), ('laboratory', 'Laboratory'), ('sports_facility', 'Sports Facility'), ('library', 'Library'), ('computer_lab', 'Computer Lab')], help_text='Type of infrastructure this image represents.', max_length=50)),
                ('image', models.ImageField(upload_to='infrastructure_images/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='schools.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='InspectionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('findings', models.TextField()),
                ('recommendations', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school'),
        ),
        migrations.CreateModel(
            name='AccreditationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accreditation_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('status', models.CharField(choices=[('awaiting accreditation.', 'Awaiting Accreditation.'), ('accreditated', 'Accreditated'), ('not-accreditated', 'Not Accreditated'), ('cancelled', 'Accreditation cancelled')], default=('awaiting accreditation.', 'Awaiting Accreditation.'), max_length=23)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_type', models.CharField(choices=[('all', 'All schools'), ('public', 'Public schools'), ('private', 'Private schools'), ('community', 'Community schools'), ('individual', 'Individual schools')], default='all', max_length=10)),
                ('program', models.CharField(choices=[('primary', 'Primary Schools'), ('jss', 'Junior Secondary Schools'), ('sss', 'Senior Secondary Schools'), ('primary+jss', 'Primary + Junior Secondary Schools'), ('jss+sss', 'Junior Secondary Schools + Senior Secondary Schools'), ('all', 'All Programs')], default='all', max_length=12)),
                ('session_name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='academic_sessions', to='schools.school')),
            ],
            options={
                'unique_together': {('school', 'session_name')},
            },
        ),
        migrations.CreateModel(
            name='SchoolMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_of_instruction', models.CharField(choices=[('en', 'English'), ('hs', 'Hausa'), ('ff', 'Fulfulde'), ('yb', 'Yoruba'), ('ig', 'Igbo')], default='en', help_text='Primary language(s) used in teaching', max_length=2)),
                ('enrollment_capacity', models.PositiveSmallIntegerField(blank=True, help_text='Annual enrollment capacity of the school.')),
                ('ownership_status', models.CharField(choices=[('state government', 'State Government'), ('local government', 'Local Government'), ('private individual', 'Private Individual'), ('religious body', 'Religious Body'), ('community', 'Community')], default='state government', help_text='Ownership status of the school', max_length=30)),
                ('owner', models.CharField(blank=True, default='', help_text='Name of the owner, e.g., JIBWIS JOS, Akko Local Government', max_length=110)),
                ('pass_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Pass rate as a percentage of students passing exams', max_digits=5, null=True)),
                ('graduation_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of students graduating each year', max_digits=5, null=True)),
                ('attendance_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Student attendance rate as a percentage', max_digits=5, null=True)),
                ('discipline_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of disciplinary incidents', max_digits=5, null=True)),
                ('compliance_percentage', models.DecimalField(blank=True, decimal_places=2, help_text="Record of the school's compliance with standards as a percentage (e.g., 80%).", max_digits=5, null=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stakeholder_name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('Principal', 'Principal'), ('Director', 'Director'), ('Liaison Officer', 'Liaison Officer'), ('Board Member', 'Board Member'), ('Trustee', 'Trustee'), ('Academic Staff', 'Academic Staff'), ('Non Academic Staff', 'Non-Academic Staff')], max_length=50)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders', to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=50)),
                ('program', models.CharField(choices=[('primary', 'Primary'), ('jss', 'Junior Secondary School'), ('sss', 'Senior Secondary School')], default='primary', max_length=12)),
                ('is_general', models.BooleanField(default=True)),
                ('is_optional', models.BooleanField(default=False)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='SuspensionClosure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspension_type', models.CharField(choices=[('Suspended', 'Suspension'), ('Closed', 'Closure')], max_length=100)),
                ('reason', models.TextField()),
                ('suspended_from', models.DateField()),
                ('suspended_to', models.DateField(blank=True, null=True)),
                ('is_indefinite', models.BooleanField(default=False)),
                ('is_dropped', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date_1', models.DateField(blank=True, null=True)),
                ('end_date_1', models.DateField(blank=True, null=True)),
                ('start_date_2', models.DateField(blank=True, null=True)),
                ('end_date_2', models.DateField(blank=True, null=True)),
                ('start_date_3', models.DateField(blank=True, null=True)),
                ('end_date_3', models.DateField(blank=True, null=True)),
                ('academic_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='term_dates', to='schools.academicsession')),
            ],
        ),
    ]
